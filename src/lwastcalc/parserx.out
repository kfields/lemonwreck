State 0:
          in ::= * expr
          expr ::= * INTEGER
          expr ::= * FLOAT
          expr ::= * expr ADD expr
          expr ::= * expr SUB expr
          expr ::= * expr MUL expr
          expr ::= * expr DIV expr
          expr ::= * LPAREN expr RPAREN

                       INTEGER shift  14
                         FLOAT shift  13
                        LPAREN shift  1
                          expr shift  7
                            in accept

State 1:
          expr ::= * INTEGER
          expr ::= * FLOAT
          expr ::= * expr ADD expr
          expr ::= * expr SUB expr
          expr ::= * expr MUL expr
          expr ::= * expr DIV expr
          expr ::= * LPAREN expr RPAREN
          expr ::= LPAREN * expr RPAREN

                       INTEGER shift  14
                         FLOAT shift  13
                        LPAREN shift  1
                          expr shift  6

State 2:
          expr ::= * INTEGER
          expr ::= * FLOAT
          expr ::= * expr ADD expr
          expr ::= * expr SUB expr
          expr ::= * expr MUL expr
          expr ::= * expr DIV expr
          expr ::= expr DIV * expr
          expr ::= * LPAREN expr RPAREN

                       INTEGER shift  14
                         FLOAT shift  13
                        LPAREN shift  1
                          expr shift  11

State 3:
          expr ::= * INTEGER
          expr ::= * FLOAT
          expr ::= * expr ADD expr
          expr ::= * expr SUB expr
          expr ::= * expr MUL expr
          expr ::= expr MUL * expr
          expr ::= * expr DIV expr
          expr ::= * LPAREN expr RPAREN

                       INTEGER shift  14
                         FLOAT shift  13
                        LPAREN shift  1
                          expr shift  12

State 4:
          expr ::= * INTEGER
          expr ::= * FLOAT
          expr ::= * expr ADD expr
          expr ::= * expr SUB expr
          expr ::= expr SUB * expr
          expr ::= * expr MUL expr
          expr ::= * expr DIV expr
          expr ::= * LPAREN expr RPAREN

                       INTEGER shift  14
                         FLOAT shift  13
                        LPAREN shift  1
                          expr shift  8

State 5:
          expr ::= * INTEGER
          expr ::= * FLOAT
          expr ::= * expr ADD expr
          expr ::= expr ADD * expr
          expr ::= * expr SUB expr
          expr ::= * expr MUL expr
          expr ::= * expr DIV expr
          expr ::= * LPAREN expr RPAREN

                       INTEGER shift  14
                         FLOAT shift  13
                        LPAREN shift  1
                          expr shift  9

State 6:
          expr ::= expr * ADD expr
          expr ::= expr * SUB expr
          expr ::= expr * MUL expr
          expr ::= expr * DIV expr
          expr ::= LPAREN expr * RPAREN

                           ADD shift  5
                           SUB shift  4
                           MUL shift  3
                           DIV shift  2
                        RPAREN shift  10

State 7:
      (0) in ::= expr *
          expr ::= expr * ADD expr
          expr ::= expr * SUB expr
          expr ::= expr * MUL expr
          expr ::= expr * DIV expr

                             $ reduce 0
                           ADD shift  5
                           SUB shift  4
                           MUL shift  3
                           DIV shift  2

State 8:
          expr ::= expr * ADD expr
          expr ::= expr * SUB expr
      (4) expr ::= expr SUB expr *
          expr ::= expr * MUL expr
          expr ::= expr * DIV expr

                           MUL shift  3
                           DIV shift  2
                     {default} reduce 4

State 9:
          expr ::= expr * ADD expr
      (3) expr ::= expr ADD expr *
          expr ::= expr * SUB expr
          expr ::= expr * MUL expr
          expr ::= expr * DIV expr

                           MUL shift  3
                           DIV shift  2
                     {default} reduce 3

State 10:
      (7) expr ::= LPAREN expr RPAREN *

                     {default} reduce 7

State 11:
          expr ::= expr * ADD expr
          expr ::= expr * SUB expr
          expr ::= expr * MUL expr
          expr ::= expr * DIV expr
      (6) expr ::= expr DIV expr *

                     {default} reduce 6

State 12:
          expr ::= expr * ADD expr
          expr ::= expr * SUB expr
          expr ::= expr * MUL expr
      (5) expr ::= expr MUL expr *
          expr ::= expr * DIV expr

                     {default} reduce 5

State 13:
      (2) expr ::= FLOAT *

                     {default} reduce 2

State 14:
      (1) expr ::= INTEGER *

                     {default} reduce 1

----------------------------------------------------
Symbols:
    0: $:
    1: INTEGER
    2: FLOAT
    3: ADD
    4: SUB
    5: MUL
    6: DIV
    7: LPAREN
    8: RPAREN
    9: error:
   10: expr: INTEGER FLOAT LPAREN
   11: in: INTEGER FLOAT LPAREN
